{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getBase644 } from \"../utils/index\";\nimport UseHome from \"../UseForm/UseHome\";\nimport axios from \"axios\";\n\nconst UsePostPublic = () => {\n  _s();\n\n  //States of Modal\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //States\n\n\n  const {\n    proveedor,\n    usuario,\n    setPublicacionActual,\n    publicacionActual\n  } = UseHome();\n  const [validation, setValidation] = useState(false);\n  const [flyer, setFlyer] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const [base64, setBase64] = useState(\"\");\n  const [input, setInput] = useState({}); //Codigo de imagenes\n\n  const handlePic = async e => {\n    const pic = e.target.files[0];\n    const base64img = await getBase644(pic);\n    const changedInput = { ...input,\n      flyer: flyer\n    };\n    setInput(changedInput);\n    setBase64(base64img);\n    const formData = new FormData();\n    formData.append('file', pic);\n    formData.append('upload_preset', 'wkuf5yo4');\n    fetch('https://api.cloudinary.com/v1_1/five-drive/upload', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(res => setFlyer(res.url));\n  };\n\n  useEffect(() => {\n    const changedInput = { ...input,\n      flyer: flyer\n    };\n    setInput(changedInput);\n  }, [flyer]);\n\n  const handleUpload = () => {\n    handleClose();\n  }; //Funcions\n\n\n  const HandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const changedInput = { ...input,\n      [name]: value,\n      proveedor: proveedor,\n      perfil: usuario.imagen,\n      provincia: usuario.provincia\n    };\n    setInput(changedInput);\n  };\n\n  const HandleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const headers = {\n        \"x-auth-token\": token\n      };\n      await axios.post(\"publicacion\", input, {\n        headers\n      });\n      setPublicacionActual(true);\n    } catch (error) {\n      console.log(error);\n      setValidation(true);\n    }\n  };\n\n  const onInputClick = event => {\n    event.target.value = \"\";\n  };\n\n  return {\n    publicacionActual,\n    onInputClick,\n    HandleChange,\n    HandleSubmit,\n    handleUpload,\n    handleClose,\n    handleShow,\n    validation,\n    handlePic,\n    base64,\n    input,\n    show\n  };\n};\n\n_s(UsePostPublic, \"K/4ttk/EmKUBJSObtblzRn+QCKw=\");\n\n_c = UsePostPublic;\nexport default UsePostPublic;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsePostPublic\");","map":{"version":3,"sources":["/home/conteo/Documentos/FullStack/UrbanCity/client/src/UseForm/UsePostPublic.js"],"names":["useState","useEffect","getBase644","UseHome","axios","UsePostPublic","show","setShow","handleClose","handleShow","proveedor","usuario","setPublicacionActual","publicacionActual","validation","setValidation","flyer","setFlyer","token","localStorage","getItem","base64","setBase64","input","setInput","handlePic","e","pic","target","files","base64img","changedInput","formData","FormData","append","fetch","method","body","then","res","json","url","handleUpload","HandleChange","name","value","perfil","imagen","provincia","HandleSubmit","preventDefault","headers","post","error","console","log","onInputClick","event"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getBase644 } from \"../utils/index\";\nimport UseHome from \"../UseForm/UseHome\";\nimport axios from \"axios\";\n\nconst UsePostPublic = () => {\n  //States of Modal\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n  //States\n    const { proveedor, usuario, setPublicacionActual, publicacionActual } = UseHome();\n    const [validation, setValidation] = useState(false);\n    const [ flyer, setFlyer] = useState(\"\")\n    const token = localStorage.getItem(\"token\");\n    const [base64, setBase64] = useState(\"\");\n    const [input, setInput] = useState({});\n\n  //Codigo de imagenes\n  const handlePic = async (e) => {\n    const pic = e.target.files[0];\n    const base64img = await getBase644(pic);\n    const changedInput = { ...input, flyer: flyer };\n    setInput(changedInput);\n    setBase64(base64img);\n    \n    const formData = new FormData()\n    formData.append('file', pic)\n    formData.append('upload_preset', 'wkuf5yo4')\n    fetch('https://api.cloudinary.com/v1_1/five-drive/upload', {\n      method: 'POST',\n      body: formData,\n    })\n    .then(res => res.json())\n    .then(res => setFlyer(res.url))\n  }\n \n  useEffect(() => {\n    const changedInput = { ...input, flyer: flyer };\n    setInput(changedInput);\n  },[flyer])\n\n  const handleUpload = () => {\n    handleClose()\n  }\n\n  //Funcions\n  const HandleChange = (e) => {\n    const { name, value } = e.target;\n    const changedInput = {\n      ...input,\n      [name]: value,\n      proveedor: proveedor,\n      perfil: usuario.imagen,\n      provincia: usuario.provincia,\n    };\n    setInput(changedInput);\n  };\n\n\n  const HandleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const headers = { \"x-auth-token\": token };\n      await axios.post(\"publicacion\", input, { headers });\n      setPublicacionActual(true);\n    } catch (error) {\n      console.log(error);\n      setValidation(true);\n    }\n  };\n\n  const onInputClick = (event) => {\n    event.target.value = \"\";\n  };\n\n  return {\n    publicacionActual,\n    onInputClick,\n    HandleChange,\n    HandleSubmit,\n    handleUpload,\n    handleClose,\n    handleShow,\n    validation,\n    handlePic,\n    base64,\n    input,\n    show,\n  };\n};\nexport default UsePostPublic;\n"]},"metadata":{},"sourceType":"module"}